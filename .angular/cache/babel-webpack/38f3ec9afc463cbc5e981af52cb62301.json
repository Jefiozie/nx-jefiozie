{"ast":null,"code":"import { DOCUMENT } from '@angular/common';\nimport { Meta, Title } from '@angular/platform-browser';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nexport let MetaService = /*#__PURE__*/(() => {\n  class MetaService {\n    constructor(meta, title, dom) {\n      this.meta = meta;\n      this.title = title;\n      this.dom = dom;\n      this._defaultImage = 'https://avatars.githubusercontent.com/u/17835373?s=460&u=c0c994330619b3b0273a377d0d750a069fc066a8&v=4';\n    }\n\n    update(front) {\n      var _a;\n\n      this.title.setTitle(MetaService.getTitle(front.title));\n      this.meta.updateTag({\n        property: 'og:title',\n        content: front.title\n      });\n      this.meta.updateTag({\n        name: 'twitter:title',\n        content: front.title\n      });\n      this.meta.updateTag({\n        name: 'twitter:description',\n        content: front.description\n      });\n      this.meta.updateTag({\n        property: 'og:description',\n        content: front.description\n      });\n      this.meta.updateTag({\n        name: 'description',\n        content: front.description\n      });\n      this.meta.updateTag({\n        property: 'og:url',\n        content: front.url\n      });\n\n      if ((_a = front.tags) === null || _a === void 0 ? void 0 : _a.length) {\n        this.meta.updateTag({\n          name: 'keywords',\n          content: front.tags.join(', ')\n        });\n      }\n\n      this.meta.updateTag({\n        name: 'twitter:image',\n        content: front.image || this._defaultImage\n      });\n      this.meta.updateTag({\n        name: 'twitter:card',\n        content: 'summary'\n      });\n      this.meta.updateTag({\n        name: 'twitter:creator',\n        content: 'jefiozie'\n      });\n      this.meta.updateTag({\n        property: 'og:image',\n        content: front.image || this._defaultImage\n      });\n      this.updateCanonical(front.url);\n    }\n\n    updateTagTitle(tagName) {\n      this.resetMeta();\n      this.title.setTitle(MetaService.getTitle(tagName));\n    }\n\n    resetMeta() {\n      this.meta.removeTag(\"property='og:title'\");\n      this.meta.removeTag(\"property='og:description'\");\n      this.meta.removeTag(\"property='og:url'\");\n      this.meta.removeTag(\"name='twitter:title'\");\n      this.meta.removeTag(\"name='twitter:description'\");\n      this.meta.removeTag(\"name='keywords'\");\n      this.meta.updateTag({\n        name: 'description',\n        content: 'Personal blog by Jeffrey Bosch'\n      });\n      this.meta.updateTag({\n        name: 'twitter:image',\n        content: this._defaultImage\n      });\n      this.meta.updateTag({\n        name: 'twitter:card',\n        content: 'summary'\n      });\n      this.meta.updateTag({\n        name: 'twitter:creator',\n        content: 'jefiozie'\n      });\n      this.meta.updateTag({\n        property: 'og:image',\n        content: this._defaultImage\n      });\n      this.title.setTitle('Jeffrey Bosch');\n      this.updateCanonical();\n    }\n\n    static getTitle(title) {\n      return `${title} | Jeffrey Bosch`;\n    }\n\n    updateCanonical(url = 'https://jefiozie.github.io') {\n      let head = this.dom.querySelector('head');\n\n      if (head != null && Array.isArray(head)) {\n        head = head[0];\n      }\n\n      let element = this.dom.querySelector(`link[rel='canonical']`) || null;\n\n      if (!element) {\n        element = this.dom.createElement('link');\n        head === null || head === void 0 ? void 0 : head.appendChild(element);\n      }\n\n      element.setAttribute('rel', 'canonical');\n      element.setAttribute('href', url);\n    }\n\n  }\n\n  MetaService.ɵfac = function MetaService_Factory(t) {\n    return new (t || MetaService)(i0.ɵɵinject(i1.Meta), i0.ɵɵinject(i1.Title), i0.ɵɵinject(DOCUMENT));\n  };\n\n  MetaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MetaService,\n    factory: MetaService.ɵfac,\n    providedIn: 'root'\n  });\n  return MetaService;\n})();","map":null,"metadata":{},"sourceType":"module"}